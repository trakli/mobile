name: Publish iOS and Android release

on:
  release:
    types: [published]
  push:
    tags:
      - "v*"
      - "v*-rc.*"
      - "*.*.*"

env:
  FLUTTER_CHANNEL: "stable"
  FLUTTER_VERSION: "3.32.8"
  RUBY_VERSION: "3.2.2" #"3.4.5"

jobs:
  # build_ios:
  #   name: Build iOS
  #   # See https://docs.github.com/en/actions/using-github-hosted-runners/about-larger-runners/about-larger-runners#about-macos-larger-runners
  #   runs-on: macos-latest
  #   timeout-minutes: 20
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Verify macOS version
  #       run: |
  #         sw_vers

  #     # - name: Set up Xcode
  #     #   uses: maxim-lobanov/setup-xcode@v1
  #     #   with:
  #     #     xcode-version: "16.3"

  #     - name: Set up Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: ${{ env.RUBY_VERSION }}
  #         bundler-cache: true
  #         working-directory: "ios"

  #     - name: Verify CocoaPods version
  #       working-directory: "ios"
  #       run: |
  #         bundle exec pod --version

  #     - name: GlobalInstall CocoaPods
  #       run: |
  #         pod --version

  #     - name: Run Flutter tasks
  #       uses: subosito/flutter-action@v2.16.0
  #       with:
  #         # https://github.com/subosito/flutter-action?tab=readme-ov-file#use-version-from-pubspecyaml
  #         # flutter-version-file: "pubspec.yaml"
  #         flutter-version: ${{ env.FLUTTER_VERSION }}
  #         channel: ${{ env.FLUTTER_CHANNEL }}
  #         cache: false

  #     - name: Generate Flutter iOS files
  #       run: |
  #         flutter pub get

  #     - name: Install iOS pods
  #       working-directory: "ios"
  #       run: |
  #         bundle exec pod install

  #     - uses: maierj/fastlane-action@v3.1.0
  #       with:
  #         lane: "release_app_store"
  #         subdirectory: "ios"
  #         options: '{ "version_number": "${{ github.ref_name }}" }'
  #       env:
  #         ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
  #         ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
  #         ASC_KEY_P8_BASE64: ${{ secrets.ASC_KEY_P8_BASE64 }}
  #         MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  #         MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
  #         APP_BUNDLE_ID: ${{ vars.APP_BUNDLE_ID }}

  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: "android"

      - name: Run Flutter tasks
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Create google_service_account.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_ACCOUNT_BASE64 }}" | base64 --decode > google_service_account.json

      - name: Create firebase google_service_account.json
        env:
          CREDENTIAL_FILE_CONTENT: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
        run: |
          cat <<< "$CREDENTIAL_FILE_CONTENT" > service_credentials_content.json

      - name: Create key.jks
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}" | base64 --decode > android/key.jks

      - name: Create key.properties
        run: |
          cat <<EOF > android/key.properties
          storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyAlias=release
          storeFile=../key.jks
          EOF
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

      - uses: maierj/fastlane-action@v3.1.0
        with:
          lane: "release_play_store"
          subdirectory: android
          options: '{ "version_number": "${{ github.ref_name }}" }'
        env:
          APP_PACKAGE_NAME: ${{ vars.APP_PACKAGE_NAME }}
